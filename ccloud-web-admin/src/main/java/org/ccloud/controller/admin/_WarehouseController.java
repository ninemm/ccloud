/**
 * Copyright (c) 2015-2016, Eric Huang 黄鑫 (hx50859042@gmail.com).
 *
 * Licensed under the GNU Lesser General Public License (LGPL) ,Version 3.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.gnu.org/licenses/lgpl-3.0.txt
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.ccloud.controller.admin;

import java.util.Date;
import java.util.Map;

import org.ccloud.core.JBaseCRUDController;
import org.ccloud.core.interceptor.ActionCacheClearInterceptor;
import org.ccloud.interceptor.UCodeInterceptor;
import org.ccloud.model.User;
import org.ccloud.model.Warehouse;
import org.ccloud.model.query.WarehouseQuery;
import org.ccloud.route.RouterMapping;
import org.ccloud.route.RouterNotAllowConvert;
import org.ccloud.utils.StringUtils;

import com.google.common.collect.ImmutableMap;
import com.jfinal.aop.Before;
import com.jfinal.kit.StrKit;
import com.jfinal.plugin.activerecord.Page;
/**
 * Generated by 九毫米(http://9mm.tech).
 */
@RouterMapping(url = "/admin/warehouse", viewPath = "/WEB-INF/admin/warehouse")
@Before(ActionCacheClearInterceptor.class)
@RouterNotAllowConvert
public class _WarehouseController extends JBaseCRUDController<Warehouse> { 

	public void list() {

		String keyword = getPara("k");
		if (StrKit.notBlank(keyword)) {
			keyword = StringUtils.urlDecode(keyword);
			setAttr("k", keyword);
		}
		String seller_id=getSessionAttr("sellerId").toString();
		Page<Warehouse> page = WarehouseQuery.me().paginate(getPageNumber(), getPageSize(), keyword, "c.create_date", seller_id);
		Map<String, Object> map = ImmutableMap.of("total", page.getTotalRow(), "rows", page.getList());
		renderJson(map);
	}
	
	@Before(UCodeInterceptor.class)
	public void batchDelete() {
		String[] ids = getParaValues("dataItem");
		int count = WarehouseQuery.me().batchDelete(ids);
		if (count > 0) {
			renderAjaxResultForSuccess("删除成功");
		} else {
			renderAjaxResultForError("删除失败!");
		}
	}
	
	public void enable() {
		String id = getPara("id");
		int isEnabled = getParaToInt("isEnabled");
		Warehouse warehouse = WarehouseQuery.me().findById(id);
		warehouse.setIsEnabled(isEnabled);
		if (warehouse.saveOrUpdate()) {
			renderAjaxResultForSuccess("更新成功");
		} else {
			renderAjaxResultForError("更新失败");
		}

	}

	@Override
	public void save() {
	  Warehouse warehouse = getModel(Warehouse.class); 
	  User user = getSessionAttr("user");
	  String seller_id=getSessionAttr("sellerId").toString();
	  warehouse.setDeptId(user.getDepartmentId());
	  warehouse.setDataArea(user.getDataArea());
	  warehouse.setSellerId(seller_id);
	  if (StringUtils.isBlank(warehouse.getId())) {
		warehouse.setId(StrKit.getRandomUUID());
		warehouse.setCreateDate(new Date());
		warehouse.save();
		renderAjaxResultForSuccess("保存成功！");
	  }else {
		warehouse.saveOrUpdate();
		renderAjaxResultForSuccess("修改成功！");
	   }
	}
}
