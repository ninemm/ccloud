/**
 * Copyright (c) 2015-2016, Eric Huang 黄鑫 (hx50859042@gmail.com).
 *
 * Licensed under the GNU Lesser General Public License (LGPL) ,Version 3.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.gnu.org/licenses/lgpl-3.0.txt
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.ccloud.controller.admin;


import org.apache.shiro.authz.annotation.Logical;
import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.ccloud.core.JBaseCRUDController;
import org.ccloud.core.interceptor.ActionCacheClearInterceptor;
import org.ccloud.interceptor.UCodeInterceptor;
import org.ccloud.model.Role;
import org.ccloud.model.query.RoleQuery;
import org.ccloud.route.RouterMapping;
import org.ccloud.route.RouterNotAllowConvert;

import com.jfinal.aop.Before;
import com.jfinal.kit.StrKit;
import com.jfinal.plugin.activerecord.Page;
/**
 * Generated by 九毫米(http://9mm.tech).
 */
@RouterMapping(url = "/admin/role", viewPath = "/WEB-INF/admin/role")
@Before(ActionCacheClearInterceptor.class)
@RouterNotAllowConvert
@RequiresPermissions(value={"role:view","admin:all"},logical=Logical.OR)
public class _RoleController extends JBaseCRUDController<Role> { 

	
	@Override
	public void index() {
		
		String keyword = getPara("k");
		if (StrKit.notBlank(keyword)) setAttr("k", keyword);
		
		
		Page<Role> page = RoleQuery.me().paginate(getPageNumber(), getPageSize(), keyword, "order_list");
		if (page != null) {
			setAttr("page", page);
		}
		
	}
	
	@Override
	@RequiresPermissions(value={"role:edit","admin:all"},logical=Logical.OR)
	public void edit() {
		String id = getPara("id");
		if (id != null) {
			Role role = RoleQuery.me().findById(id);
			setAttr("role", role);
		}
	}

	@Before(UCodeInterceptor.class)
	@RequiresPermissions(value={"role:edit","admin:all"},logical=Logical.OR)
	public void batchDelete() {
		
		String[] ids = getParaValues("dataItem");
		int count = RoleQuery.me().batchDelete(ids);
		if (count > 0) {
			renderAjaxResultForSuccess("删除成功");
		} else {
			renderAjaxResultForError("删除失败!");
		}
		
	}
	
	
}
