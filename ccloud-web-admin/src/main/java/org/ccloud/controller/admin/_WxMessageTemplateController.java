/**
 * Copyright (c) 2015-2016, Eric Huang 黄鑫 (hx50859042@gmail.com).
 *
 * Licensed under the GNU Lesser General Public License (LGPL) ,Version 3.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.gnu.org/licenses/lgpl-3.0.txt
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.ccloud.controller.admin;

import java.util.List;
import java.util.Map;

import org.ccloud.core.JBaseCRUDController;
import org.ccloud.core.interceptor.ActionCacheClearInterceptor;
import org.ccloud.model.WxMessageTemplate;
import org.ccloud.model.query.WxMessageTemplateQuery;
import org.ccloud.route.RouterMapping;
import org.ccloud.route.RouterNotAllowConvert;
import org.ccloud.wechat.WechatApiConfigInterceptor;

import com.beust.jcommander.internal.Lists;
import com.google.common.collect.ImmutableMap;
import com.jfinal.aop.Before;
import com.jfinal.kit.StrKit;
import com.jfinal.plugin.activerecord.Db;
import com.jfinal.plugin.activerecord.Page;
import com.jfinal.weixin.sdk.api.ApiResult;
import com.jfinal.weixin.sdk.api.TemplateMsgApi;
/**
 * Generated by 九毫米(http://9mm.tech).
 */
@RouterMapping(url = "/admin/messageTemplate", viewPath = "/WEB-INF/admin/message_template")
@Before(ActionCacheClearInterceptor.class)
@RouterNotAllowConvert
public class _WxMessageTemplateController extends JBaseCRUDController<WxMessageTemplate> { 

	public void index() {
		render("index.html");
	}
	
	public void list() {
		Page<WxMessageTemplate> page = WxMessageTemplateQuery.me().paginate(getPageNumber(), getPageSize(), null);
		Map<String, Object> map = ImmutableMap.of("total", page.getTotalRow(), "rows", page.getList());
		renderJson(map);
	}
	
	@SuppressWarnings("unchecked")
	@Before(WechatApiConfigInterceptor.class)
	public void templateSync() {
		
		ApiResult apiResult = TemplateMsgApi.getAllTemplate();
		
		if (apiResult == null) {
			renderAjaxResultForError("获取微信模板失败");
			return ;
		}
		
		List<Map<String, String>> templateList = apiResult.getList("template_list");
		List<WxMessageTemplate> existList = WxMessageTemplateQuery.me().findAll();
		
		List<WxMessageTemplate> list = Lists.newArrayList();
		boolean isExist = false;
		
		for (Map<String, String> obj : templateList) {
			isExist = false;
			for (WxMessageTemplate template : existList) {
				if (StrKit.equals(template.getTemplateId(), obj.get("template_id"))) {
					isExist = true;
					break;
				}
			}
			
			if (!isExist) {
				WxMessageTemplate messageTemplate = new WxMessageTemplate();
				messageTemplate.setId(StrKit.getRandomUUID());
				messageTemplate.setTemplateId(obj.get("template_id"));
				messageTemplate.setTitle(obj.get("title"));
				
				messageTemplate.setContent(obj.get("content"));
				messageTemplate.setDeputyIndustry(obj.get("deputy_industry"));
				messageTemplate.setPrimaryIndustry(obj.get("primary_industry"));
				messageTemplate.setExample(obj.get("example"));
				
				list.add(messageTemplate);
			}
		}
		int[] result = Db.batchSave(list, list.size());
		
		if (result.length == list.size()) {
			renderAjaxResultForSuccess("微信模板同步成功");
		} else {
			renderAjaxResultForError("微信模板同步失败");
		}
		
	}
	
	public void edit() {
		
		String id = getPara("id");
		if (StrKit.notBlank(id)) {
			WxMessageTemplate messageTemplate = WxMessageTemplateQuery.me().findById(id);
			setAttr("wxMessageTemplate", messageTemplate);
		}
		
	}
	
	public void save() {
		
		WxMessageTemplate messageTemplate = getModel(WxMessageTemplate.class);
		
		if (messageTemplate.saveOrUpdateWithoutDate()) {
			renderAjaxResultForSuccess("操作成功");
			return;
		}
		
		renderAjaxResultForError("操作失败");
		
	}
}
